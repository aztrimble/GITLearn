#!/usr/bin/env python

import rospy

from turtlesim.msg import Pose
from geometry_msgs.msg import Twist, Wrench

from dynamics import MITHoverCraftDynamics

class MITHoverCraftDynamicsROSWrapper:
    
    def __init__(self):
        # Initialize a MIT Hover Craft Dyanmics object
        self.dyn = MITHoverCraftDynamics()

        # Create subscribers
        ## Topics
        rospy.Subscriber("/follower/tau", Wrench, self.set_tau)

        #Create publishers
        self.publish_velocity = rospy.Publisher("/follower/cmd_vel",
                                           Twist, 
                                           queue_size=10)

    def set_tau(self, msg):
        self.dyn.set_tau({'X':msg.force.x,
                          'Y':msg.force.y,
                          'N':msg.torque.z})

    def pub_nu(self,event):
        new_nu = self.dyn.update_nu()
        nu = Twist()
        nu.linear.x = new_nu['u']
        nu.linear.y = new_nu['v']
        nu.angular.z = new_nu['r']

        self.publish_velocity.publish(nu)

if __name__=='__main__':
    rospy.init_node('follower_dynamic')
    freq = 5.0
    dt = 1.0/freq
    fdyn = MITHoverCraftDynamicsROSWrapper()
    fdyn.dyn.set_dt(dt)
    rospy.Timer(rospy.Duration(dt), fdyn.pub_nu)
    rospy.loginfo('Well Dynamics is initiated, hopefully it is working')
    rospy.spin()
